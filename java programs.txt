/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    int marks1,marks2,marks3;
	    int total,avg=0;
	Scanner sc=new Scanner(System.in);
	int n=sc.nextInt();
	int counter=1;
	while(counter<=n){
	marks1=sc.nextInt();
	marks2=sc.nextInt();
	marks3=sc.nextInt();
	total=marks1+marks2+marks3;
    avg=total/3;
    if(avg>=70)
    {
        System.out.print("Qualified");
    }
    else
    {
        System.out.print("Not Qualified");
    }
    counter+=1;
	}
	}
}








                          _________prime number_______________


import java.util.*;
class Main {
	public static void main(String [] args) {
		int n,flag=0;
		Scanner sc=new Scanner(System.in);
		n=sc.nextInt();
		if(n==1)
		{
		    System.out.print(n+" is not a prime number");
		}
		for(int i=2; i<=n/2; i++)
		{
			if(n%i==0)
			{
				flag=1;
				break;
			}
		}
		if(flag==1)
		{
			System.out.print(n+" is not a prime number");
		}
		else 
		{
                        System.out.print(n+" is a prime number");
		}
	}
}





                        _______________fibonacci series__________________


import java.util.*;
class Main{
    static int fib(int n){
        if(n==1)
        return 0;
        if(n==2||n==3)
        return 1;
        else
        return fib(n-2)+fib(n-1);
    }
    public static void main(String args[]){
        int n;
        Scanner sc=new Scanner(System.in);
        for(int i=0;i<n;i++)
        {
            fib(i);
        }
    }
}


                              


import java.util.*;
class Main {
    
	public static void main(String [] args) {
		int num1=0,num2=1,num3;
        for(int i=0;i<1000;i++)
        {
            num3=num1+num2;
            num1=num2;
            num2=num3;
            System.out.print(num3+" ");
        }
        
	}
}







       _______________________maximum element________________


import java.util.*;
class Main {
    static int maxElement(int a[])
    {
        int max=a[0];
        for(int i=0;i<a.length;i++)
        {
            if(max<a[i])
            max=a[i];
        }
        return max;
    }
	public static void main(String [] args) {
	    Scanner sc=new Scanner(System.in);
	    int n=sc.nextInt();
	    int arr[]=new int[n];
	    for(int i=0;i<n;i++)
	    {
	        arr[i]=sc.nextInt();
	    }
	    maxElement(arr);
        
	}
}



                 ____________first occurence of an element_______________

import java.util.*;
class Main{
    static int firstOccurence(int arr[],int m){
        for(int i=0;i<arr.length;i++){
            if(arr[i]==m)
            return i;
            break;
        }
        return -1;
    }
    public static void main(String args[]){
        int n;
        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();
        int m=sc.nextInt();
        int arr[]=new int[n];
        for(int i=0;i<n;i++)
        {
            arr[i]=sc.nextInt();
        }
        firstOccurence(arr,m);
    }
}



                 ____________reverse a number______________



import java.util.*;
class Main{
    static int reverseNumber(int n){
        int number=0;
        while(n%10==0&&n!=0)
        {
            n=n/10;
        }
        while(n!=0)
        {
            int digit=n%10;
            number=number*10+digit;
            n/=10;
        }
 
        return number;
    }
    public static void main(String args[]){
        int n;
        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();
        int rev=reverseNumber(n);
        System.out.print(rev);
    }
}